---
import Icon from "./Icon.astro";

interface TabItem {
  displayName: string;
  link: string;
  icon: string;
}

const tabItems: TabItem[] = [
  {
    displayName: "Core Team",
    link: "/team/ctms",
    icon: "about",
  },
  {
    displayName: "Executives",
    link: "/team/executives",
    icon: "team",
  },
  {
    displayName: "Advisors",
    link: "/team/advisors",
    icon: "events",
  },
];

const currentPath = Astro.url.pathname;
---

<div class="tab">
  {
    tabItems.map((item, index) => (
      <a class:list={{ active: currentPath === item.link }} href={currentPath === item.link ? "#" : item.link}>
        <div class="tab-title">{item.displayName}</div>
      </a>
    ))
  }
</div>

<style lang="scss">
  @import "../styles/index.scss";

  .tab {
    max-width: 90%;
    z-index: 100;
    padding: 0 0.4rem;

    display: flex;

    text-align: left;
    text-orientation: mixed;

    @media screen and (orientation: landscape) and (max-device-width: $screen-md-max) {
      width: 27rem;
    }
  }

  a {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;

    width: 10rem;
    margin: min(0.6rem, 1.5cqi) min(0.8rem, 2cqi);
    padding: min(0.8rem, 2cqi) min(0.6rem, 3cqi);
    border-radius: 8px;
    gap: 4px;

    text-decoration: none;
    transition: all 0.3s ease;

    @media screen and (max-device-width: $screen-md-max) {
      height: 10cqi;
      margin: min(0.4rem, 1.5cqi) min(0.1rem, 2cqi);
    }
  }

  a:hover,
  .active,
  .active:hover {
    .tab-title {
      color: #ff9b50;
      font-weight: 500;
    }
  }

  .tab-title {
    color: $text-tertiary;
    font-size: 1.2rem;
    text-transform: uppercase;
    text-align: center;
    @media (max-width: #{$screen-md-max}) {
      font-size: min(1.2rem, 3cqi);
    }
  }

  span {
    width: 6cqi;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>
